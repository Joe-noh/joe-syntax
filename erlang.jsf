# JOE syntax highlight file for Erlang

=Idle
=Comment	fg_030
=String		fg_110
=String_mod	fg_200 bold
=String_esc	fg_000 bold
=Int		fg_033
=Record		fg_530
=Recatt		
=Fun		fg_115
=Module		fg_101
=Keyword	bold
=Guard		fg_200
=Bif		fg_501
=Brace		fg_505
=Brack		fg_055

=Variable	fg_310
=Attribute	fg_505
=Dunno		fg_330 bold

:idle Idle
	*		idle
	"A-Z_"		variable	noeat
	"%"		line_comment	noeat
	"\""		string		recolor=-1
	"'"		quoted_atom	recolor=-1
	"0-9"		decimal		recolor=-1
        "[]"            brack           recolor=-1
	"{}"		brace		recolor=-1
	"-"		maybe_attribute	buffer
	"a-z"		atom		buffer mark noeat
	"#"		record		recolor=-1
	"$"		dunno		recolor=-1

:dunno Dunno
	*		idle
	"\\"		dunnoesc

:dunnoesc Dunno
	*		idle

:line_comment Comment
	*		line_comment
	"@"		is_edoc		noeat buffer 
	"\n"		idle

:is_edoc Comment
	*		line_comment	noeat strings
	"@clear"	edoc
	"@docfile"	edoc
	"@headerfle"	edoc
	"@todo"		edoc
	"@TODO"		edoc
	"@type"		edoc
	"@reference"	edoc
	"@see"		edoc
	"@since"	edoc
	"@deprecated"	edoc
	"@hidden"	edoc
	"@private"	edoc
	"@equiv"	edoc
	"@throws"	edoc
	"@author"	edoc
	"@copyright"	edoc
	"@version"	edoc
	"@title"	edoc
	"@spec"		edoc
	"@doc"		edoc
	"@end"		edoc
done
	"A-Za-z@"	is_edoc

:edoc Keyword
	*		line_comment	noeat

:variable Variable
	*		idle		noeat
	"a-zA-Z0-9_"	variable

:record Record
	*		idle		noeat
	"a-zA-z_"	record
	"."		recatt		recolor=-1

:recatt Recatt
	*		idle		noeat
	"a-zA-Z_"	recatt

# STRINGS
:string String
	*		string
	"\\"		string_escape	recolor=-1
	"~"		string_		mark
	"\""		idle

:string_escape String_esc
	*		string

:string_ String
	*		string_mod	noeat
	"0-9"		string_f
	"t"		string_mod
:string_f String
	*		string_mod	noeat          
	"0-9*"		string_f
	"."		string_p

:string_p String
	*		string_mod	noeat
	"0-9*"		string_p

:string_mod String
	*		string
	"cfegswpWPBX#bx+ni"	string_modifier recolormark noeat

:string_modifier String_mod
	*		string
# END STRINGS
:decimal Int
	*		idle		noeat
	"0-9"		decimal
	"."		float
	"#"		base

:float Int
	*		idle		noeat
	"0-9"		float

:base Int
	*		idle		noeat
	"0-9A-F"	base

:brace Brace
	*		idle		noeat

:brack Brack
	*		idle		noeat

:maybe_attribute Idle
	*		idle		noeat strings
	"-module"	attribute
	"-export"	attribute
	"-compile"	attribute
	"-ifdef"	attribute
	"-endif"	attribute
	"-spec"		attribute
	"-author"	attribute
	"-copyright"	attribute
	"-include"	attribute
	"-include_lib"	attribute
	"-vsn"		attribute
	"-behaviour"	attribute
	"-record"	attribute
done
	"a-z_"		maybe_attribute

:attribute Attribute
	*		idle		noeat

:no_atom Idle
	*		idle		noeat
	" "		no_atom
	"("		function	recolormark noeat
	":"		module		recolormark noeat

:module Module
	*		idle		noeat

:function Fun
	*		idle		noeat

:kw Keyword
	*		idle		noeat

:guard Guard
	*		idle		noeat

:bif Bif
	*		idle		recolormark noeat
	" "		bif
	"("		idle		noeat

:quoted_atom Idle
	*		quoted_atom
	"'"		idle

:atom Idle
	*		no_atom		noeat strings
	"after"		kw
	"and"		kw
	"andalso"	kw
	"band"		kw
	"begin"		kw
	"bnot"		kw
	"bor"		kw
	"bsl"		kw
	"bsr"		kw
	"bxor"		kw
	"case"		kw
	"catch"		kw
	"cond"		kw
	"div"		kw
	"end"		kw
	"fun"		kw
	"if"		kw
	"let"		kw
	"not"		kw
	"of"		kw
	"or"		kw
	"orelse"	kw
	"query"		kw
	"receive"	kw
	"rem"		kw
	"try"		kw
	"when"		kw
	"xor"		kw
	"is_atom"	guard
	"is_binary"	guard
	"is_bitstream"	guard
	"is_boolean"	guard
	"is_float"	guard
	"is_function"	guard
	"is_integer"	guard
	"is_list"	guard
	"is_number"	guard
	"is_pid"	guard
	"is_port"	guard
	"is_record"	guard
	"is_reference"	guard
	"is_tuple"	guard
	"abs"		bif
	"adler32"	bif
	"adler32_combine"	bif
	"append_element"	bif
	"apply"		bif
	"atom_to_binary"	bif
	"atom_to_list"	bif
	"binary_part"	bif
	"binary_to_atom"	bif
	"binary_to_existing_atom"	bif
	"binary_to_list"	bif
	"bitstring_to_list"	bif
	"binary_to_term"	bif
	"bit_size"	bif
	"bump_reductions"	bif
	"byte_size"	bif
	"cancel_timer"	bif
	"check_old_code"	bif
	"check_process_code"	bif
	"crc32"		bif
	"crc32_combine"	bif
	"date"		bif
	"decode_packet"	bif
	"delete_module"	bif
	"demonitor"	bif
	"disconnect_node"	bif
	"display"	bif
	"element"	bif
	"erase"		bif
	"error"		bif
	"exit"		bif
	"external_size"	bif
	"float"		bif
	"float_to_list"	bif
	"fun_info"	bif
	"fun_to_list"	bif
	"function_exported"	bif
	"garbage_collect"	bif
	"get"		bif
	"get_cookie"	bif
	"get_keys"	bif
	"get_stacktrace"	bif
	"group_leader"	bif
	"halt"		bif
	"hash"		bif
	"hd"		bif
	"hibernate"	bif
	"integer_to_list"	bif
	"iolist_to_binary"	bif
	"iolist_size"	bif
	"is_alive"	bif
	"is_builtin"	bif
	"is_process_alive"	bif
	"length"	bif
	"link"		bif
	"list_to_atom"	bif
	"list_to_binary"	bif
	"list_to_bitstring"	bif
	"list_to_existing_atom"	bif
	"list_to_float"	bif
	"list_to_integer"	bif
	"list_to_pid"	bif
	"list_to_tuple"	bif
	"load_module"	bif
	"load_nif"	bif
	"loaded"	bif
	"local_time"	bif
	"local_time_to_universaltime"	bif
	"make_ref"	bif
	"make_tuple"	bif
	"max"		bif
	"md5"		bif
	"md5_final"	bif
	"md5_init"	bif
	"md5_update"	bif
	"memory"	bif
	"min"		bif
	"module_loaded"	bif
	"monitor"	bif
	"monitor_node"	bif
	"nif_error"	bif
	"node"		bif
	"nodes"		bif
	"now"		bif
	"open_port"	bif
	"phash"		bif
	"phash2"	bif
	"pid_to_list"	bif
	"port_close"	bif
	"port_command"	bif
	"port_connect"	bif
	"port_control"	bif
	"port_call"	bif
	"port_info"	bif
	"port_to_list"	bif
	"ports"		bif
	"pre_loaded"	bif
	"process_display"	bif
	"process_flag"	bif
	"process_info"	bif
	"processes"	bif
	"purge_module"	bif
	"put"		bif
	"raise"		bif
	"read_timer"	bif
	"ref_to_list"	bif
	"register"	bif
	"registered"	bif
	"resume_process"	bif
	"round"		bif
	"self"		bif
	"send"		bif
	"send_after"	bif
	"send_nosuspend"	bif
	"set_cookie"	bif
	"setelement"	bif
	"size"		bif
	"spawn"		bif
	"spawn_link"	bif
	"spawn_monitor"	bif
	"spawn_opt"	bif
	"split_binary"	bif
	"start_timer"	bif
	"statistics"	bif
	"suspended_process"	bif
	"system_flag"	bif
	"system_info"	bif
	"system_monitor"	bif
	"system_profile"	bif
	"term_to_binary"	bif
	"throw"		bif
	"time"		bif
	"tl"		bif
	"trace"		bif
	"trace_deliviered"	bif
	"trace_info"	bif
	"trace_pattern"	bif
	"trunc"		bif
	"tuple_size"	bif
	"tuple_to_list"	bif
	"universaltime"		bif
	"universaltime_to_localtime"	bif
	"unlink"	bif
	"unregister"	bif
	"whereis"	bif
	"yield"		bif
done 
	"a-zA-Z0-9_@"	atom
